[{"id":"5baf52e38d3b9ef4","type":"tab","label":"Nodered-InfluxDB","disabled":false,"info":"","env":[]},{"id":"4","type":"postgreSQLConfig","name":"PostgreSQL","host":"localhost","hostFieldType":"str","port":"5432","portFieldType":"num","database":"all_machine_data","databaseFieldType":"str","ssl":"false","sslFieldType":"bool","applicationName":"","applicationNameType":"str","max":"10","maxFieldType":"num","idle":"1000","idleFieldType":"num","connectionTimeout":"10000","connectionTimeoutFieldType":"num","user":"admin","userFieldType":"str","password":"admin","passwordFieldType":"str"},{"id":"c34319dd72593555","type":"mqtt-broker","name":"","broker":"mqtt.eclipseprojects.io","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"296ca96da22ac9fc","type":"postgresdb","hostname":"localhost","port":"5432","db":"all_machine_data","ssl":false},{"id":"09ac7b74ba47cb47","type":"postgreSQLConfig","name":"PostgreSQL","host":"database","hostFieldType":"str","port":"5432","portFieldType":"num","database":"all_machine_data","databaseFieldType":"str","ssl":"false","sslFieldType":"bool","applicationName":"","applicationNameType":"str","max":"10","maxFieldType":"num","idle":"1000","idleFieldType":"num","connectionTimeout":"10000","connectionTimeoutFieldType":"num","user":"admin","userFieldType":"str","password":"admin","passwordFieldType":"str"},{"id":"1c62a63f.6f05e8","type":"mqtt-broker","name":"MQTT Broker","broker":"mqtt://localhost:1883","port":"","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"15","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":"0"},{"id":"1c155c7d.1ab3d4","type":"mqtt-broker","name":"MQTT Broker","broker":"mqtt://localhost","port":"1883","clientid":"nodered_mqtt_client","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"59ca58e64bca192c","type":"postgresdb","hostname":"database","port":"5432","db":"all_machine_data","ssl":false},{"id":"f41252a94157ae2d","type":"mqtt out","z":"5baf52e38d3b9ef4","d":true,"name":"","topic":"Drilling Machine","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":300,"y":200,"wires":[]},{"id":"0e35e2494073dec4","type":"mqtt out","z":"5baf52e38d3b9ef4","d":true,"name":"","topic":"Soldering Machine","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":310,"y":400,"wires":[]},{"id":"4e6b7666721c83fc","type":"mqtt out","z":"5baf52e38d3b9ef4","d":true,"name":"","topic":"Welding Machine","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":310,"y":300,"wires":[]},{"id":"1e87053d57e2c1a9","type":"mqtt out","z":"5baf52e38d3b9ef4","d":true,"name":"","topic":"Assembly Machine","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":310,"y":500,"wires":[]},{"id":"e848dbb4abb221ff","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine","topic":"ZG/DR_MA/PLC/0/#","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":500,"y":200,"wires":[["2aa2904c0d0c0b08","a3cae04cba86cf6c"]]},{"id":"ac9ef4d84248cc32","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Welding Machine","topic":"ZG/WE_MA/PLC/0/#","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":300,"wires":[["2aa2904c0d0c0b08","a3cae04cba86cf6c"]]},{"id":"65d98629a7471564","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Soldering Machine","topic":"ZG/SO_MA/PLC/0/#","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":530,"y":400,"wires":[["2aa2904c0d0c0b08","a3cae04cba86cf6c"]]},{"id":"44c31aa39c381def","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Assembly Machine","topic":"ZG/AS_MA/PLC/0/#","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":530,"y":500,"wires":[["2aa2904c0d0c0b08","a3cae04cba86cf6c"]]},{"id":"ff9b7dac29622612","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine Connection Config","info":"","x":360,"y":160,"wires":[]},{"id":"0b69b40fdba45006","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Welding Machine Connection Config","info":"","x":360,"y":260,"wires":[]},{"id":"6a629b07be35ea53","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Soldering Machine Connection Config","info":"","x":370,"y":360,"wires":[]},{"id":"df3f1413639c19d6","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Assembly Machine Connection Config","info":"","x":370,"y":460,"wires":[]},{"id":"2aa2904c0d0c0b08","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 1","func":"// Extract payload from MQTT message\nlet payload = msg.payload;\nlet topic = msg.topic;\n\n// Example topic: ZG/DR_MA/PLC/0/DrillingSpeed\n\n// Split topic to extract machine ID and parameter\nlet topicParts = topic.split('/');\nif (topicParts.length < 4) {\n    // Return an error message\n    return [null, { payload: 'Invalid topic format' }];\n}\n\n// Extract machine ID and parameter\nlet machine_name = topicParts[1]; // e.g., DR_MA\nlet parameter = topicParts[3]; // e.g., DrillingSpeed\n\n// Validate and process payload\nif (typeof payload !== 'number') {\n    // Return an error message\n    return [null, { payload: 'Invalid payload type' }];\n}\n\n// Construct SQL commands\nlet createTableSQL = `\n    CREATE TABLE IF NOT EXISTS nodered_machine_data (\n        id SERIAL PRIMARY KEY,\n        machine_name VARCHAR(255),\n        parameter VARCHAR(255),\n        value FLOAT,\n        unit VARCHAR(50),\n        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    );\n`;\n\nlet insertSQL = `\n    INSERT INTO nodered_machine_data (machine_name, topic, value, unit, timestamp)\n    VALUES ('${machine_name}', '${parameter}', ${payload}, ${payload}, CURRENT_TIMESTAMP);\n`;\n\n// Create messages for PostgreSQL nodes\nlet createTableMsg = { payload: createTableSQL };\nlet insertDataMsg = { payload: insertSQL };\n\n// Send both SQL commands in sequence\nreturn [createTableMsg, insertDataMsg];\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":360,"wires":[["3d1f3e9bc67a0dad","b492ab696393ba3c"]]},{"id":"3d1f3e9bc67a0dad","type":"debug","z":"5baf52e38d3b9ef4","d":true,"name":"debug 7","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":960,"y":360,"wires":[]},{"id":"b492ab696393ba3c","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 2","func":"node.error(error.message, msg);\nreturn msg;","outputs":1,"timeout":0,"noerr":1,"initialize":"","finalize":"","libs":[],"x":780,"y":460,"wires":[["2ee0beaa16409f50"]]},{"id":"2ee0beaa16409f50","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"","query":"CREATE TABLE IF NOT EXISTS Drilling_Machine (\n        id SERIAL PRIMARY KEY,\n        machine_name VARCHAR(255),\n        topic VARCHAR(255),\n        value FLOAT,\n        unit VARCHAR(50),\n        timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n    ),\nCREATE TABLE IF NOT EXISTS Welding_Machine (\n        id SERIAL PRIMARY KEY,\n        machine_name VARCHAR(255),\n        topic VARCHAR(255),\n        value FLOAT,\n        unit VARCHAR(50),\n        timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n    ),\nCREATE TABLE IF NOT EXISTS Soldering_Machine (\n        id SERIAL PRIMARY KEY,\n        machine_name VARCHAR(255),\n        topic VARCHAR(255),\n        value FLOAT,\n        unit VARCHAR(50),\n        timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n    ),\nCREATE TABLE IF NOT EXISTS Assembly_Machine (\n        id SERIAL PRIMARY KEY,\n        machine_name VARCHAR(255),\n        topic VARCHAR(255),\n        value FLOAT,\n        unit VARCHAR(50),\n        timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n    )\n","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":950,"y":460,"wires":[["7aeba77d6e5233d3"]]},{"id":"3f4b3456b72537e2","type":"debug","z":"5baf52e38d3b9ef4","d":true,"name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1300,"y":460,"wires":[]},{"id":"7aeba77d6e5233d3","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"","query":"","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":1130,"y":460,"wires":[["3f4b3456b72537e2"]]},{"id":"a3cae04cba86cf6c","type":"debug","z":"5baf52e38d3b9ef4","d":true,"name":"debug 10","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":780,"y":200,"wires":[]},{"id":"5789d682032685b7","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Check Table","query":"SELECT EXISTS (\n    SELECT FROM information_schema.tables \n    WHERE table_name = 'drilling_data'\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":910,"y":820,"wires":[["16780e9a3dd61430"]]},{"id":"16780e9a3dd61430","type":"switch","z":"5baf52e38d3b9ef4","d":true,"name":"Table Exists?","property":"payload[0].exists","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1090,"y":820,"wires":[["d4ec09d5b54e96b6"],["b0e7de42c57b309d"]]},{"id":"b0e7de42c57b309d","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Create Table","query":"CREATE TABLE drilling_data (\n    id SERIAL PRIMARY KEY,\n    drilling_speed FLOAT,\n    unit VARCHAR(10),\n    timestamp TIMESTAMP\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","outputs":1,"x":1290,"y":820,"wires":[[]]},{"id":"8772be00ac1f5efb","type":"mqtt out","z":"5baf52e38d3b9ef4","d":true,"name":"","topic":"Drilling Machine","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":320,"y":980,"wires":[]},{"id":"ed94fc82120b978b","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine","topic":"ZG/DR_MA/PLC/0/DrillingSpeed","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":800,"wires":[["54ec21cc0e04a244","17290af27b0bf3bd"]]},{"id":"54ec21cc0e04a244","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 5","func":"msg.payload = {\n    drilling_speed: msg.payload,\n    unit: 'rpm',\n    timestamp: new Date().toISOString()\n};\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":800,"wires":[["5789d682032685b7","d4ec09d5b54e96b6"]]},{"id":"1dbc175f08c672c6","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","query":"","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","x":1290,"y":760,"wires":[]},{"id":"d4ec09d5b54e96b6","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","func":"var drilling_speed = msg.payload.drilling_speed;\nvar unit = msg.payload.unit;\nvar timestamp = msg.payload.timestamp;\n\n// Check if drilling_speed, unit, and timestamp are not empty\nif (drilling_speed !== undefined && drilling_speed !== null && drilling_speed !== '') {\n    if (unit !== undefined && unit !== null && unit !== '') {\n        if (timestamp !== undefined && timestamp !== null && timestamp !== '') {\n            msg.query = \"INSERT INTO drilling_data (drilling_speed, unit, timestamp) VALUES ($1, $2, $3);\";\n            msg.params = [drilling_speed, unit, timestamp];\n            return msg;\n        } else {\n            // Ignore the warning for missing or empty timestamp\n            return null;\n        }\n    } else {\n        // Ignore the warning for missing or empty unit\n        return null;\n    }\n} else {\n    // Ignore the warning for missing or empty drilling speed\n    return null;\n}\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":760,"wires":[["1dbc175f08c672c6"]]},{"id":"7c1d828d286b9975","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","func":"var torque = msg.payload.torque;\nvar unit = msg.payload.unit;\nvar timestamp = msg.payload.timestamp;\n\n// Check if torque, unit, and timestamp are not empty\nif (torque !== undefined && torque !== null && torque !== '') {\n    if (unit !== undefined && unit !== null && unit !== '') {\n        if (timestamp !== undefined && timestamp !== null && timestamp !== '') {\n            msg.query = \"INSERT INTO torque_data (torque, unit, timestamp) VALUES ($1, $2, $3);\";\n            msg.params = [torque, unit, timestamp];\n            return msg;\n        } else {\n            // Ignore the warning for missing or empty timestamp\n            return null;\n        }\n    } else {\n        // Ignore the warning for missing or empty unit\n        return null;\n    }\n} else {\n    // Ignore the warning for missing or empty torque\n    return null;\n}\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":900,"wires":[["599e8c666fa0cdbe"]]},{"id":"7190f4508cc6a71e","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Check Table","query":"SELECT EXISTS (\n    SELECT FROM information_schema.tables \n    WHERE table_name = 'torque_data'\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":910,"y":960,"wires":[["21cf9c9c28f05d6a"]]},{"id":"21cf9c9c28f05d6a","type":"switch","z":"5baf52e38d3b9ef4","d":true,"name":"Table Exists?","property":"payload[0].exists","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1090,"y":960,"wires":[["7c1d828d286b9975"],["371feec8da3ec4c3"]]},{"id":"371feec8da3ec4c3","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Create Table","query":"CREATE TABLE torque_data (\n    id SERIAL PRIMARY KEY,\n    torque FLOAT,\n    unit VARCHAR(10),\n    timestamp TIMESTAMP\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","outputs":1,"x":1290,"y":960,"wires":[[]]},{"id":"5c012888a18283a7","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine","topic":"ZG/DR_MA/PLC/0/Torque","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":940,"wires":[["4109fe943e6265a4","17290af27b0bf3bd"]]},{"id":"4109fe943e6265a4","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 6","func":"msg.payload = {\n    torque: msg.payload,\n    unit: 'kNm',\n    timestamp: new Date().toISOString()\n};\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":940,"wires":[["7190f4508cc6a71e","7c1d828d286b9975"]]},{"id":"599e8c666fa0cdbe","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","query":"","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","x":1290,"y":900,"wires":[]},{"id":"33f7d2bcb9b81988","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","func":"var belt_speed = msg.payload.belt_speed;\nvar unit = msg.payload.unit;\nvar timestamp = msg.payload.timestamp;\n\n// Check if belt_speed, unit, and timestamp are not empty\nif (belt_speed !== undefined && belt_speed !== null && belt_speed !== '') {\n    if (unit !== undefined && unit !== null && unit !== '') {\n        if (timestamp !== undefined && timestamp !== null && timestamp !== '') {\n            msg.query = \"INSERT INTO belt_speed_data (belt_speed, unit, timestamp) VALUES ($1, $2, $3);\";\n            msg.params = [belt_speed, unit, timestamp];\n            return msg;\n        } else {\n            // Ignore the warning for missing or empty timestamp\n            return null;\n        }\n    } else {\n        // Ignore the warning for missing or empty unit\n        return null;\n    }\n} else {\n    // Ignore the warning for missing or empty belt_speed\n    return null;\n}\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":1020,"wires":[["618c597b1873dbad"]]},{"id":"439b3fb085a677ed","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Check Table","query":"SELECT EXISTS (\n    SELECT FROM information_schema.tables \n    WHERE table_name = 'belt_speed_data'\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":910,"y":1080,"wires":[["fd195bdefdd675c9"]]},{"id":"fd195bdefdd675c9","type":"switch","z":"5baf52e38d3b9ef4","d":true,"name":"Table Exists?","property":"payload[0].exists","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1090,"y":1080,"wires":[["33f7d2bcb9b81988"],["532c6381babe3d88"]]},{"id":"532c6381babe3d88","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Create Table","query":"CREATE TABLE belt_speed_data (\n    id SERIAL PRIMARY KEY,\n    belt_speed FLOAT,\n    unit VARCHAR(10),\n    timestamp TIMESTAMP\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","outputs":1,"x":1290,"y":1080,"wires":[[]]},{"id":"c9a14233c9ac26fc","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine","topic":"ZG/DR_MA/PLC/0/BeltSpeed","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":1060,"wires":[["b19e9d1ac7933eff","17290af27b0bf3bd"]]},{"id":"b19e9d1ac7933eff","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 7","func":"msg.payload = {\n    belt_speed: msg.payload,\n    unit: '%',\n    timestamp: new Date().toISOString()\n};\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":1060,"wires":[["439b3fb085a677ed","33f7d2bcb9b81988"]]},{"id":"618c597b1873dbad","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","query":"","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","x":1290,"y":1020,"wires":[]},{"id":"6aabc1190952815d","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","func":"var temperature = msg.payload.temperature;\nvar unit = msg.payload.unit;\nvar timestamp = msg.payload.timestamp;\n\n// Check if temperature, unit, and timestamp are not empty\nif (temperature !== undefined && temperature !== null && temperature !== '') {\n    if (unit !== undefined && unit !== null && unit !== '') {\n        if (timestamp !== undefined && timestamp !== null && timestamp !== '') {\n            msg.query = \"INSERT INTO temperature_data (temperature, unit, timestamp) VALUES ($1, $2, $3);\";\n            msg.params = [temperature, unit, timestamp];\n            return msg;\n        } else {\n            // Ignore the warning for missing or empty timestamp\n            return null;\n        }\n    } else {\n        // Ignore the warning for missing or empty unit\n        return null;\n    }\n} else {\n    // Ignore the warning for missing or empty temperature\n    return null;\n}\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":1160,"wires":[["0896c8e95772f954"]]},{"id":"e8b8475fd2959776","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Check Table","query":"SELECT EXISTS (\n    SELECT FROM information_schema.tables \n    WHERE table_name = 'temperature_data'\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":1,"outputs":1,"x":910,"y":1220,"wires":[["0a179b5b2bbd96fd"]]},{"id":"0a179b5b2bbd96fd","type":"switch","z":"5baf52e38d3b9ef4","d":true,"name":"Table Exists?","property":"payload[0].exists","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1090,"y":1220,"wires":[["6aabc1190952815d"],["0d3cf4e8626a98da"]]},{"id":"0d3cf4e8626a98da","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Create Table","query":"CREATE TABLE temperature_data (\n    id SERIAL PRIMARY KEY,\n    temperature FLOAT,\n    unit VARCHAR(10),\n    timestamp TIMESTAMP\n);","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","outputs":1,"x":1290,"y":1220,"wires":[[]]},{"id":"4f7829e6a7cbef88","type":"mqtt in","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine","topic":"ZG/DR_MA/PLC/0/Temperature","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":1200,"wires":[["3ab38849bbb4b8cd","17290af27b0bf3bd"]]},{"id":"3ab38849bbb4b8cd","type":"function","z":"5baf52e38d3b9ef4","d":true,"name":"function 8","func":"msg.payload = {\n    temperature: msg.payload,\n    unit: '°C',\n    timestamp: new Date().toISOString()\n};\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":1200,"wires":[["e8b8475fd2959776","6aabc1190952815d"]]},{"id":"0896c8e95772f954","type":"postgresql","z":"5baf52e38d3b9ef4","d":true,"name":"Insert Data","query":"","postgreSQLConfig":"09ac7b74ba47cb47","split":false,"rowsPerMsg":"","x":1290,"y":1160,"wires":[]},{"id":"7012f4207641dc33","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine #1 parameter","info":"","x":560,"y":760,"wires":[]},{"id":"ab17413829fb3ebb","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine #2 parameter","info":"","x":560,"y":900,"wires":[]},{"id":"f78d969ef343705e","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine #3 parameter","info":"","x":560,"y":1020,"wires":[]},{"id":"0d42f2ad4b33e47b","type":"comment","z":"5baf52e38d3b9ef4","d":true,"name":"Drilling Machine #4 parameter","info":"","x":560,"y":1160,"wires":[]},{"id":"17290af27b0bf3bd","type":"debug","z":"5baf52e38d3b9ef4","d":true,"name":"debug 11","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":320,"y":1060,"wires":[]},{"id":"0781dd913c38ce9e","type":"mqtt out","z":"5baf52e38d3b9ef4","name":"","topic":"All data","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"c34319dd72593555","x":320,"y":1420,"wires":[]},{"id":"359b078a0e5ffdc3","type":"mqtt in","z":"5baf52e38d3b9ef4","name":"Drilling Machine","topic":"ZG/DRI/1/DRILLINGSPEED","qos":"0","datatype":"auto-detect","broker":"c34319dd72593555","nl":false,"rap":true,"rh":0,"inputs":0,"x":520,"y":1420,"wires":[["98255760cbc38c9e"]]},{"id":"98255760cbc38c9e","type":"debug","z":"5baf52e38d3b9ef4","name":"debug 12","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":720,"y":1420,"wires":[]}]